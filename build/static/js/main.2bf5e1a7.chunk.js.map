{"version":3,"sources":["components/ExpensesTotal.module.css","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Card.js","components/ExpenseFilter.js","components/Calendar.js","components/ExpenseItem.js","components/ChartBar.js","components/Chart.js","components/ExpensesChart.js","components/ExpensesTotal.js","components/Expense.js","App.js","index.js"],"names":["module","exports","ExpenseForm","props","useState","title","setTitle","amount","setAmount","date","setDate","onSubmit","event","preventDefault","expenseData","Date","onFormSubmit","className","type","value","onChange","target","min","step","parseFloat","max","NewExpense","probs","editMode","setEditMode","onClick","newExpenseData","id","Math","random","toString","onNewExpense","Card","classes","children","ExpenseFilter","selected","onChangeFilter","Calendar","month","toLocaleString","day","year","getFullYear","ExpenseItem","ChartBar","fillRatio","maxValue","round","style","height","label","Chart","arrayValue","dataPoints","map","dataPoint","calculatedMaxValue","ExpensesChart","chartDataPoints","expense","getMonth","ExpenseTotal","expensestotal","total","Expense","filteredYear","setFilterYear","filteredItems","items","filter","totalAmout","length","expenseContent","selectedYear","toFixed","DUMMY","url","App","expenses","setExpenses","data","fetch","method","body","JSON","stringify","headers","response","json","dataBack","console","log","key","loadedExpense","push","useEffect","fetchExpense","postExpense","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bf5e1a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"expensestotal\":\"ExpensesTotal_expensestotal__KecRC\"};","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setAmount(parseFloat(event.target.value));\r\n    // convert string to float\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setDate(event.target.value);\r\n  };\r\n  const formSubmit = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: title,\r\n      amount: amount,\r\n      date: new Date(date),\r\n    };\r\n    props.onFormSubmit(expenseData);\r\n\r\n    setTitle(\"\");\r\n    setAmount(\"\");\r\n    setDate(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={formSubmit}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={title} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={amount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={date}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n//probs to pass function from App\r\nconst NewExpense = (probs) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const formSubmitHandler = (expenseData) => {\r\n    //get new Data tá»« ExpenseForm\r\n    const newExpenseData = {\r\n      id: Math.random().toString(),\r\n      ...expenseData,\r\n    };\r\n    probs.onNewExpense(newExpenseData);\r\n    setEditMode(false);\r\n  };\r\n\r\n  const btnClickHandler = () => {\r\n    setEditMode(true);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <p>G & S Company</p>\r\n      {editMode === false && (\r\n        <button onClick={btnClickHandler}>Add new expense</button>\r\n      )}\r\n      {editMode === true && <ExpenseForm onFormSubmit={formSubmitHandler} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import \"./Card.css\";\r\nconst Card = (probs) => {\r\n  const classes = \"card \" + probs.className;\r\n  return <div className={classes}>{probs.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpenseFilter.css\";\r\n\r\nconst ExpenseFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"All\">All</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import \"./Calendar.css\";\r\nfunction Calendar(probs) {\r\n  const month = probs.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = probs.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = probs.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport Calendar from \"./Calendar\";\r\nimport Card from \"./Card\";\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <Calendar date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\nexport default ExpenseItem;\r\n","import \"./ChartBar.css\";\r\n// expect props = dataPoint\r\n// receive maxValue from parent and => fillRatio\r\nconst ChartBar = (props) => {\r\n  let fillRatio = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    fillRatio = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{ height: fillRatio }}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n// expect props = array of data {value, label} pass from ExpensesChart\r\nconst Chart = (props) => {\r\n  // maxValue calculated from props.dataPoints\r\n  const arrayValue = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const calculatedMaxValue = Math.max(...arrayValue);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          label={dataPoint.label}\r\n          maxValue={calculatedMaxValue}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","// props = dataPoints array from Expenses filteredItems\r\nimport Chart from \"./Chart\";\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n  for (const expense of props.dataPoints) {\r\n    const expensesMonth = expense.date.getMonth();\r\n    chartDataPoints[expensesMonth].value += expense.amount;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Chart dataPoints={chartDataPoints} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import classes from \"./ExpensesTotal.module.css\";\r\n\r\nconst ExpenseTotal = (props) => {\r\n  return (\r\n    <div className={classes.expensestotal}>\r\n      <h3>Total expense:</h3>\r\n      <h2>${props.total}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseTotal;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./Expense.css\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpenseTotal from \"./ExpensesTotal\";\r\n\r\n// Expense hiá»n thá» 2 Components lÃ  Expense Filter vÃ  Expense Items\r\n// Expense nháº­n data tá»« props.items\r\n// cÃ³ 1 State lÃ  filteredYear => sá»­ dá»¥ng State nÃ y Äá» filter props.items\r\n\r\nconst Expense = (props) => {\r\n  const [filteredYear, setFilterYear] = useState(\"2021\");\r\n  // function changeFilterHandler sáº½ update State\r\n  // React sáº½ render Components cÃ³ sá»­ dá»¥ng biáº¿n filteredYear\r\n  // => sáº½ update láº¡i filteredItems\r\n  const changeFilterHandler = (selectedYear) => {\r\n    setFilterYear(selectedYear);\r\n  };\r\n  const filteredItems = props.items.filter((expense) => {\r\n    if (filteredYear === \"All\") {\r\n      return props.items;\r\n    } else {\r\n      return expense.date.getFullYear().toString() === filteredYear;\r\n    }\r\n  });\r\n  let totalAmout = 0;\r\n  if (filteredItems.length > 0) {\r\n    for (const item of filteredItems) {\r\n      totalAmout += item.amount;\r\n    }\r\n  }\r\n  let expenseContent = <p>No Expenses found</p>;\r\n  if (filteredItems.length > 0) {\r\n    expenseContent = filteredItems.map((expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ));\r\n  }\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={changeFilterHandler}\r\n      />\r\n      <ExpensesChart dataPoints={filteredItems} />\r\n      {expenseContent}\r\n      <ExpenseTotal total={totalAmout.toFixed(2)} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expense;\r\n","import React, { useEffect, useState } from \"react\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expense from \"./components/Expense\";\n\nconst DUMMY = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst url =\n  \"https://movie-database-4me-default-rtdb.europe-west1.firebasedatabase.app/expenses.json\";\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY);\n  // post data\n  async function postExpense(data) {\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const dataBack = await response.json();\n    console.log(dataBack);\n  }\n  // fetch data from server\n  async function fetchExpense() {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    // convert data\n    const loadedExpense = [];\n    for (const key in data) {\n      loadedExpense.push({\n        id: key,\n        title: data[key].title,\n        amount: data[key].amount,\n        date: new Date(data[key].date),\n      });\n    }\n\n    // const temp = new Date(loadedExpense[0].date);\n    // console.log(typeof temp);\n    // console.log(temp.toLocaleString(\"en-US\", { month: \"long\" }));\n    console.log(loadedExpense);\n    setExpenses(loadedExpense);\n  }\n\n  //new function to handle data comming from NewExpense\n  const newExpenseHandler = (expenseData) => {\n    console.log(expenseData);\n    postExpense(expenseData);\n    setExpenses((prevExpenses) => {\n      return [expenseData, ...prevExpenses];\n    });\n  };\n\n  useEffect(() => {\n    fetchExpense();\n  }, []);\n  // the map built-in funtion:\n  // inside {}, create array of Component i.e ExppenseItem with parameter from item\n  return (\n    <div>\n      <NewExpense onNewExpense={newExpenseHandler} />\n      <Expense items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}